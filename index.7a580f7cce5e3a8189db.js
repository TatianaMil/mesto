(()=>{"use strict";const e={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button-submit",inactiveButtonClass:"popup__button-submit_invalid",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_visible"},t=(document.querySelector(".gallery"),document.querySelector(".profile__button")),s=document.querySelector(".profile__title"),o=document.querySelector(".profile__info"),i=document.querySelector(".profile__img"),r=document.querySelector(".profile__edit-avatar-button"),n=document.querySelector(".profile__button-plus"),a=(document.querySelector(".popup_type_profile"),document.querySelector(".popup_type_img"),document.querySelector(".popup_type_card-add"),document.querySelector(".popup__img"),document.querySelector(".popup__title-img"),document.forms.editForm),l=document.forms.addForm,u=document.forms.editAvatarForm;document.querySelector(".popup__form_profile"),document.querySelector(".popup__form_card-add"),document.querySelector(".popup__form_avatar"),document.querySelector(".popup__input_form-name"),document.querySelector(".popup__input_form-about"),document.querySelector(".popup__input_img-name"),document.querySelector(".popup__input_img-link"),document.querySelector(".popup__button-close_profile"),document.querySelector(".popup__button-close_add-card"),document.querySelector(".popup__button-close_big-img");class _{constructor(e,t,s,o,i,r,n){this._templateSelector=t,this._handleCardClick=s,this._likes=e.likes,this._id=e._id,this._name=e.name,this._link=e.link,this._ownerId=e.owner._id,this._userId=o,this._like=i,this._dislike=r,this._deleteCard=n}like(){this._likeButton.classList.add("gallery__like_active")}dislike(){this._likeButton.classList.remove("gallery__like_active")}likesCount(e){this._likesCount.textContent=`${e.likes.length}`}_userLiked(){this._likes.forEach((e=>{e._id===this._userId?this.like():this.dislike()}))}remove(){this._cardElement.remove()}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._likeButton.classList.contains("gallery__like_active")?this._dislike():this._like()})),this._deleteButtonTrash.addEventListener("click",(()=>{this._deleteCard(this._id)})),this._imageElementMask.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}getView=()=>{const e=document.querySelector(this._templateSelector);if(e){const t=e.content.querySelector(".gallery__item");t?this._cardElement=t.cloneNode(!0):console.log("В классе Card не найден .gallery__item!")}else console.log("В классе Card не найден "+this._templateSelector+"!");return this._likeButton=this._cardElement.querySelector(".gallery__like"),this._likesCount=this._cardElement.querySelector(".gallery__count-like"),this._likesCount.textContent=this._likes.length,this._deleteButtonTrash=this._cardElement.querySelector(".gallery__del"),this._ownerId!==this._userId&&this._deleteButtonTrash.remove(),this._imageElementMask=this._cardElement.querySelector(".gallery__img"),this._imageElementMask.src=this._link,this._imageElementMask.alt=this._name,this._cardElement.querySelector(".gallery__title").textContent=this._name,this._setEventListeners(),this._userLiked(),this._cardElement}}class c{constructor(e,t){this._form=t,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputElement=Array.from(this._form.querySelectorAll(this._inputSelector)),this._button=this._form.querySelector(this._submitButtonSelector)}_showInputError=(e,t)=>{const s=this._form.querySelector(`.${e.id}-error`);e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)};_hideInputError=e=>{const t=this._form.querySelector(`.${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)};_checkInputValidity=e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)};_hasInvalidInput(){return this._inputElement.some((e=>!e.validity.valid))}disableSubmitButton(){this._button.classList.add(this._inactiveButtonClass),this._button.disabled=!0}_enableSubmitButton(){this._button.classList.remove(this._inactiveButtonClass),this._button.disabled=!1}_toggleButtonState=()=>{this._hasInvalidInput()?this.disableSubmitButton():this._enableSubmitButton()};_setEventListeners=()=>{this._toggleButtonState(),this._inputElement.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))};enableValidation(){this._setEventListeners()}}class h{constructor(e){this._popup=document.querySelector(e),this._popupCloseButton=this._popup.querySelector(".popup__button-close"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this.setEventListeners(),this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupCloseButton.addEventListener("click",(()=>{this.close()})),this._popup.addEventListener("mousedown",(e=>{e.target===e.currentTarget&&this.close()}))}}class p extends h{constructor(e,t){super(e),this._callbackSubmit=t,this._form=this._popup.querySelector(".popup__form"),this._inputElements=this._form.querySelectorAll(".popup__input"),this._button=this._form.querySelector("popup__button-submit"),this._form.addEventListener("submit",(e=>{e.preventDefault();const t=e.submitter.textContent;e.submitter.textContent="Сохранение...",this._callbackSubmit(this._getInputValues()).then((()=>this.close())).finally((()=>{e.submitter.textContent=t}))}))}_getInputValues(){const e={};return this._inputElements.forEach((t=>{e[t.name]=t.value})),e}setInputValue(e){this._inputElements.forEach((t=>{t.value=e[t.name]}))}close(){super.close(),this._form.reset()}chengedButtonText(e){this._button.textContent=e}}let d;const m=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_handleResponse(e){return e.ok?Promise.resolve(e.json()):Promise.reject(`Ошибка: ${e.status}`)}async editProfileUserApi(e){const t=await fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})});return this._handleResponse(t)}async getRealUserInfo(){const e=await fetch(`${this._baseUrl}/users/me`,{headers:this._headers});return this._handleResponse(e)}async getInitialCards(){const e=await fetch(`${this._baseUrl}/cards`,{headers:this._headers});return this._handleResponse(e)}async createNewCardApi(e){const t=await fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify(e)});return this._handleResponse(t)}async removeCard(e){const t=await fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers});return this._handleResponse(t)}async addLike(e){const t=await fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers});return this._handleResponse(t)}async removeLike(e){const t=await fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers});return this._handleResponse(t)}async updateProfileUserAvatar(e){const t=await fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})});return this._handleResponse(t)}}({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-60",headers:{authorization:"ea996ec4-3586-49ec-99cf-46c56e637a89","Content-Type":"application/json"}});function y(e){const t=new _(e,"#template-new-img",b,d,(async()=>{try{const s=await m.addLike(e._id);t.like(),t.likesCount(s)}catch(e){return console.log(`Ошибка: ${e}`)}}),(async()=>{try{const s=await m.removeLike(e._id);t.dislike(),t.likesCount(s)}catch(e){return console.log(`Ошибка: ${e}`)}}),(()=>{I.open(t)}));return t.getView()}function b(e,t){v.open(e,t)}const v=new class extends h{constructor(e){super(e),this._popupImage=this._popup.querySelector(".popup__img"),this._popupImageTitle=this._popup.querySelector(".popup__title-img")}open(e,t){this._popupImageTitle.textContent=e,this._popupImage.src=t,this._popupImage.alt=e,super.open()}}(".popup_type_img"),f=new p(".popup_type_card-add",(async function(e){try{const t=await m.createNewCardApi(e);w.addItem(y(t))}catch(e){console.log(`Ошибка: ${e}`)}})),S=new p(".popup_type_profile",(async function(e){try{const t=await m.editProfileUserApi(e);k.setUserInfo(t)}catch(e){console.log(`Ошибка: ${e}`)}})),g=new p(".popup_type_update-avatar",(async function(e){try{const t=await m.updateProfileUserAvatar(e);k.setUserInfo(t)}catch(e){console.log(`Ошибка: ${e}`)}})),k=new class{constructor({name:e,about:t,avatar:s}){this._data={name:e.textContent,about:t.textContent,avatar:s.textContent},this._name=e,this._about=t,this._avatar=s}getUserInfo(){return{name:this._data.name,about:this._data.about,avatar:this._data.avatar}}setUserInfo(e){this._data.name=e.name,this._data.about=e.about,this._data.avatar=e.avatar,e.name&&(this._name.textContent=this._data.name),e.about&&(this._about.textContent=this._data.about),e.avatar&&(this._avatar.src=this._data.avatar,this._avatar.alt=this._data.name)}}({name:s,about:o,avatar:i});t.addEventListener("click",(()=>{S.open(),S.setInputValue(k.getUserInfo()),E.disableSubmitButton()}),!1),r.addEventListener("click",(()=>{g.open(),q.disableSubmitButton()}),!1),n.addEventListener("click",(()=>{f.open(),C.disableSubmitButton()}),!1);const E=new c(e,a),C=new c(e,l),q=new c(e,u);E.enableValidation(),C.enableValidation(),q.enableValidation();const I=new class extends h{constructor(e,t){super(e),this._handleSubmit=t,this._form=this._popup.querySelector(".popup__form"),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(this._card)}))}open(e){this._card=e,super.open()}}(".popup_type_delete-card",(async e=>{m.removeCard(e._id).then((()=>{e.remove(),I.close()})).catch((e=>console.log(`Ошибка: ${e}`)))})),w=new class{constructor({renderer:e},t){this._renderer=e,this._container=document.querySelector(t)}addItem=e=>{this._container.prepend(e)};renderItems(e){e.reverse().forEach((e=>this._renderer(e)))}}({renderer:e=>{const t=y(e);w.addItem(t)}},".gallery");Promise.all([m.getRealUserInfo(),m.getInitialCards()]).then((([e,t])=>{k.setUserInfo(e),d=e._id,w.renderItems(t)})).catch((e=>console.log(`Ошибка: ${e}`)))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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TGlLQSxDQUNFSixTQUFXNUssSUFDVCxNQUFNMEksRUFBT0QsRUFBV3pJLEdBRXhCc0osRUFBU0MsUUFBUWIsRUFBSyxHQUcxQixZQUlGakIsUUFBUTRELElBQUksQ0FBQ3BFLEVBQUlxRSxrQkFBbUJyRSxFQUFJc0Usb0JBQ3JDOUUsTUFBSyxFQUFFZ0QsRUFBYStCLE1BQ25CN0IsRUFBS0MsWUFBWUgsR0FDakJ0SixFQUFTc0osRUFBWTdJLElBQ3JCMEksRUFBUzRCLFlBQVlNLEVBQU0sSUFHNUJiLE9BQU85QixHQUFVL0YsUUFBUUMsSUFBSyxXQUFVOEYsTSIsInNvdXJjZXMiOlsid2VicGFjazovL21lc3RvLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3V0aWxzL0FwaS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhDb25maXJtYXRpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB2YWxpZGF0aW9uQ29uZmlnID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLnBvcHVwX19mb3JtXCIsIC8v0YTQvtGA0LzQsFxuICBpbnB1dFNlbGVjdG9yOiBcIi5wb3B1cF9faW5wdXRcIiwgLy/QuNC90L/Rg9GCXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5wb3B1cF9fYnV0dG9uLXN1Ym1pdFwiLCAvL9C60L3QvtC/0LrQsFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcInBvcHVwX19idXR0b24tc3VibWl0X2ludmFsaWRcIiwgLy/QvdC10LDQutGC0LjQstC90LDRjyDQutC90L7Qv9C60LBcbiAgaW5wdXRFcnJvckNsYXNzOiBcInBvcHVwX19pbnB1dF90eXBlX2Vycm9yXCIsIC8v0L/QvtC00YfQtdGA0LrQuNCy0LDQvdC40LUg0LrRgNCw0YHQvdGL0Lwg0L/RgNC4INC+0YjQuNCx0LrQtVxuICBlcnJvckNsYXNzOiBcInBvcHVwX19pbnB1dC1lcnJvcl92aXNpYmxlXCIsIC8v0L/QvtC60LDQt9Cw0YLRjCDQvtGI0LjQsdC60YMg0L/RgNC4INC90LXQstC10YDQvdC+INC30LDQv9C+0LvQvdC10L3QvtC8INC/0L7Qu9C1XG59O1xuXG5leHBvcnQgY29uc3QgcG9wdXBDb25maWcgPSB7XG4gIHBvcHVwRWRpdFNlbGVjdG9yOiBcIi5wb3B1cF90eXBlX3Byb2ZpbGVcIixcbiAgcG9wdXBBZGRDYXJkU2VsZWN0b3I6IFwiLnBvcHVwX3R5cGVfY2FyZC1hZGRcIixcbiAgcG9wdXBJbWFnZVNlbGVjdG9yOiBcIi5wb3B1cF90eXBlX2ltZ1wiLFxuICBwb3B1cFVwZGF0ZUF2YXRhclNlbGVjdG9yOiBcIi5wb3B1cF90eXBlX3VwZGF0ZS1hdmF0YXJcIixcbiAgcG9wdXBEZWxldGVTZWxlY3RvcjogXCIucG9wdXBfdHlwZV9kZWxldGUtY2FyZFwiLFxufTtcblxuZXhwb3J0IGNvbnN0IGdhbGxlcnlDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmdhbGxlcnlcIik7XG5cbmV4cG9ydCBjb25zdCBwcm9maWxlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19idXR0b25cIik7XG5leHBvcnQgY29uc3QgcHJvZmlsZVRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX190aXRsZVwiKTtcbmV4cG9ydCBjb25zdCBwcm9maWxlSW5mbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9faW5mb1wiKTtcbmV4cG9ydCBjb25zdCBwcm9maWxlQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19pbWdcIik7XG5leHBvcnQgY29uc3QgcHJvZmlsZUVkaXRBdmF0YXJCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICBcIi5wcm9maWxlX19lZGl0LWF2YXRhci1idXR0b25cIlxuKTtcbmV4cG9ydCBjb25zdCBidXR0b25PcGVuZUZvcm1DYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgXCIucHJvZmlsZV9fYnV0dG9uLXBsdXNcIlxuKTtcblxuZXhwb3J0IGNvbnN0IHBvcHVwVHlwZVByb2ZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX3R5cGVfcHJvZmlsZVwiKTtcbmV4cG9ydCBjb25zdCBwb3B1cENhcmRJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfdHlwZV9pbWdcIik7XG5leHBvcnQgY29uc3QgcG9wdXBBZGRDYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF90eXBlX2NhcmQtYWRkXCIpO1xuXG5leHBvcnQgY29uc3QgcG9wdXBJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltZ1wiKTtcbmV4cG9ydCBjb25zdCBwb3B1cFRpdGxlSW1hZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX190aXRsZS1pbWdcIik7XG5cbi8v0L3QsNGF0L7QtNC40Lwg0YTQvtGA0LzRgyDRgNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNGPINC/0L4g0LXQtSBuYW1lXG5leHBvcnQgY29uc3QgZm9ybUVkaXRQcm9maWxlID0gZG9jdW1lbnQuZm9ybXMuZWRpdEZvcm07XG5cbi8v0L3QsNGF0L7QtNC40Lwg0YTQvtGA0LzRgyDRgdC+0LfQtNCw0L3QuNGPINC60LDRgNGC0L7Rh9C10Log0L/QviDQtdC1IG5hbWVcbmV4cG9ydCBjb25zdCBmb3JtQWRkUHJvZmlsZSA9IGRvY3VtZW50LmZvcm1zLmFkZEZvcm07XG5cbi8v0L3QsNGF0L7QtNC40Lwg0YTQvtGA0LzRgyDQvtCx0L3QvtCy0LvQtdC90LjRjyDQsNCy0LDRgtCw0YDQsCDQv9C+INC10LUgbmFtZVxuZXhwb3J0IGNvbnN0IGZvcm1VcGRhdGVBdmF0YXIgPSBkb2N1bWVudC5mb3Jtcy5lZGl0QXZhdGFyRm9ybTtcblxuZXhwb3J0IGNvbnN0IHBvcHVwRm9ybVByb2ZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtX3Byb2ZpbGVcIik7XG5leHBvcnQgY29uc3QgcG9wdXBGb3JtUGxhY2VQbHVzZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gIFwiLnBvcHVwX19mb3JtX2NhcmQtYWRkXCJcbik7XG5leHBvcnQgY29uc3QgcG9wdXBGb3JtQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybV9hdmF0YXJcIik7XG5cbmV4cG9ydCBjb25zdCBuYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbnB1dF9mb3JtLW5hbWVcIik7XG5leHBvcnQgY29uc3QgYWJvdXRJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2lucHV0X2Zvcm0tYWJvdXRcIik7XG5leHBvcnQgY29uc3QgcG9wdXBJbWFnZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbnB1dF9pbWctbmFtZVwiKTtcbmV4cG9ydCBjb25zdCBwb3B1cEltYWdlTGluayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2lucHV0X2ltZy1saW5rXCIpO1xuXG5leHBvcnQgY29uc3QgcG9wdXBCdXR0b25DbG9zZVByb2ZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICBcIi5wb3B1cF9fYnV0dG9uLWNsb3NlX3Byb2ZpbGVcIlxuKTtcbmV4cG9ydCBjb25zdCBwb3B1cEJ1dHRvbkNsb3NlQWRkQ2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gIFwiLnBvcHVwX19idXR0b24tY2xvc2VfYWRkLWNhcmRcIlxuKTtcbmV4cG9ydCBjb25zdCBwb3B1cEJ1dHRvbkNsb3NlUGxhY2VJbWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICBcIi5wb3B1cF9fYnV0dG9uLWNsb3NlX2JpZy1pbWdcIlxuKTtcbiIsImV4cG9ydCBjbGFzcyBDYXJkIHtcbiAgY29uc3RydWN0b3IoXG4gICAgZGF0YSxcbiAgICB0ZW1wbGF0ZVNlbGVjdG9yLFxuICAgIGhhbmRsZUNhcmRDbGljayxcbiAgICB1c2VySWQsXG4gICAgbGlrZSxcbiAgICBkaXNsaWtlLFxuICAgIGRlbGV0ZUNhcmRcbiAgKSB7XG4gICAgdGhpcy5fdGVtcGxhdGVTZWxlY3RvciA9IHRlbXBsYXRlU2VsZWN0b3I7XG4gICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrO1xuICAgIHRoaXMuX2xpa2VzID0gZGF0YS5saWtlcztcbiAgICB0aGlzLl9pZCA9IGRhdGEuX2lkOyAvL2NhcmQgaWRcbiAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XG4gICAgdGhpcy5fb3duZXJJZCA9IGRhdGEub3duZXIuX2lkOyAvL2lkIG9mIHRoZSBjYXJkIGNyZWF0b3JcbiAgICB0aGlzLl91c2VySWQgPSB1c2VySWQ7IC8vbWUgaWRcbiAgICB0aGlzLl9saWtlID0gbGlrZTtcbiAgICB0aGlzLl9kaXNsaWtlID0gZGlzbGlrZTtcbiAgICB0aGlzLl9kZWxldGVDYXJkID0gZGVsZXRlQ2FyZDtcblxuICB9XG5cbiAgLy9hZGQgbGlrZVxuICBsaWtlKCkge1xuICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LmFkZCgnZ2FsbGVyeV9fbGlrZV9hY3RpdmUnKTtcbiAgfVxuLy9kZWxldGUgbGlrZVxuICBkaXNsaWtlKCkge1xuICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnZ2FsbGVyeV9fbGlrZV9hY3RpdmUnKTtcbiAgfVxuXG4gIC8vY291bnRlciBsaWtlc1xuICBsaWtlc0NvdW50KHJlcykge1xuICAgIHRoaXMuX2xpa2VzQ291bnQudGV4dENvbnRlbnQgPSBgJHtyZXMubGlrZXMubGVuZ3RofWA7XG4gIH1cblxuICBfdXNlckxpa2VkKCkge1xuICAgIHRoaXMuX2xpa2VzLmZvckVhY2goKGVsZW1lbnRJZCkgPT4ge1xuICAgICAgaWYgKGVsZW1lbnRJZC5faWQgPT09IHRoaXMuX3VzZXJJZCkge1xuICAgICAgICB0aGlzLmxpa2UoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuZGlzbGlrZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgcmVtb3ZlKCkge1xuICAgIHRoaXMuX2NhcmRFbGVtZW50LnJlbW92ZSgpO1xuICB9XG5cbiAgLy/QvtCx0YDQsNCx0L7RgtGH0LjQutC4XG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9saWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgaWYgKHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LmNvbnRhaW5zKCdnYWxsZXJ5X19saWtlX2FjdGl2ZScpKSB7XG4gICAgICAgIHRoaXMuX2Rpc2xpa2UoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuX2xpa2UoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLl9kZWxldGVCdXR0b25UcmFzaC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIHRoaXMuX2RlbGV0ZUNhcmQodGhpcy5faWQpO1xuICAgIH0pO1xuICAgIHRoaXMuX2ltYWdlRWxlbWVudE1hc2suYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sodGhpcy5fbmFtZSwgdGhpcy5fbGluayk7XG4gICAgfSk7XG4gIH1cblxuICBnZXRWaWV3ID0gKCkgPT4ge1xuICAgIGNvbnN0IHRlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl90ZW1wbGF0ZVNlbGVjdG9yKTtcbiAgICBpZiAodGVtcGxhdGUpIHtcbiAgICAgIGNvbnN0IGVsZW1lbnQgPSB0ZW1wbGF0ZS5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoJy5nYWxsZXJ5X19pdGVtJyk7XG4gICAgICBpZiAoZWxlbWVudCkge1xuICAgICAgICB0aGlzLl9jYXJkRWxlbWVudCA9IGVsZW1lbnQuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgfSBlbHNlIGNvbnNvbGUubG9nKCfQkiDQutC70LDRgdGB0LUgQ2FyZCDQvdC1INC90LDQudC00LXQvSAuZ2FsbGVyeV9faXRlbSEnKTtcbiAgICB9IGVsc2VcbiAgICAgIGNvbnNvbGUubG9nKCfQkiDQutC70LDRgdGB0LUgQ2FyZCDQvdC1INC90LDQudC00LXQvSAnICsgdGhpcy5fdGVtcGxhdGVTZWxlY3RvciArICchJyk7XG5cbiAgICB0aGlzLl9saWtlQnV0dG9uID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcignLmdhbGxlcnlfX2xpa2UnKTtcblxuICAgIC8vIGNvdW50ZXIgbGlrZXNcbiAgICB0aGlzLl9saWtlc0NvdW50ID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcignLmdhbGxlcnlfX2NvdW50LWxpa2UnKTtcbiAgICB0aGlzLl9saWtlc0NvdW50LnRleHRDb250ZW50ID0gdGhpcy5fbGlrZXMubGVuZ3RoO1xuICAgIHRoaXMuX2RlbGV0ZUJ1dHRvblRyYXNoID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcignLmdhbGxlcnlfX2RlbCcpO1xuICAgIGlmICh0aGlzLl9vd25lcklkICE9PSB0aGlzLl91c2VySWQpIHtcbiAgICAgIHRoaXMuX2RlbGV0ZUJ1dHRvblRyYXNoLnJlbW92ZSgpO1xuICAgIH1cblxuICAgIHRoaXMuX2ltYWdlRWxlbWVudE1hc2sgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZ2FsbGVyeV9faW1nJyk7XG4gICAgdGhpcy5faW1hZ2VFbGVtZW50TWFzay5zcmMgPSB0aGlzLl9saW5rO1xuICAgIHRoaXMuX2ltYWdlRWxlbWVudE1hc2suYWx0ID0gdGhpcy5fbmFtZTtcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZ2FsbGVyeV9fdGl0bGUnKS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XG5cbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICAgIHRoaXMuX3VzZXJMaWtlZCgpO1xuXG4gICAgcmV0dXJuIHRoaXMuX2NhcmRFbGVtZW50O1xuICB9O1xufVxuIiwiZXhwb3J0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3Rvcih2YWxpZGF0aW9uQ29uZmlnLCBmb3JtKSB7XG4gICAgdGhpcy5fZm9ybSA9IGZvcm07XG4gICAgLy/QutC70LDRgdGB0YtcbiAgICB0aGlzLl9mb3JtU2VsZWN0b3IgPSB2YWxpZGF0aW9uQ29uZmlnLmZvcm1TZWxlY3RvcjtcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gdmFsaWRhdGlvbkNvbmZpZy5pbnB1dFNlbGVjdG9yO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gdmFsaWRhdGlvbkNvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gdmFsaWRhdGlvbkNvbmZpZy5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IHZhbGlkYXRpb25Db25maWcuaW5wdXRFcnJvckNsYXNzO1xuICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSB2YWxpZGF0aW9uQ29uZmlnLmVycm9yQ2xhc3M7XG5cbiAgICB0aGlzLl9pbnB1dEVsZW1lbnQgPSBBcnJheS5mcm9tKHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKSk7XG4gICAgdGhpcy5fYnV0dG9uID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcbiAgfTtcblxuICAvLyBzaG93IGFuIGVycm9yXG4gIF9zaG93SW5wdXRFcnJvciA9IChpbnB1dCwgdGV4dEVycm9yKSA9PiB7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dC5pZH0tZXJyb3JgKTtcbiAgICBpbnB1dC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gdGV4dEVycm9yO1xuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICB9O1xuXG4gIC8vaGlkZSBhbiBlcnJvclxuICBfaGlkZUlucHV0RXJyb3IgPSAoaW5wdXQpID0+IHtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0LmlkfS1lcnJvcmApO1xuICAgIGlucHV0LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSAnJztcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcbiAgfTtcblxuICAvL9C/0YDQvtCy0LXRgNGP0LXQvCDQstCw0LvQuNC00L3QvtGB0YLRjFxuICBfY2hlY2tJbnB1dFZhbGlkaXR5ID0gKGlucHV0KSA9PiB7XG4gICAgaWYoIWlucHV0LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dCwgaW5wdXQudmFsaWRhdGlvbk1lc3NhZ2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dCk7XG4gICAgfTtcbiAgfTtcblxuICAvL9C/0YDQvtGF0L7QtNC40LzRgdGPINC/0L4g0LLRgdC10Lwg0LjQvdC/0YPRgtCw0Lwg0Lgg0L/RgNC+0LLQtdGA0Y/QtdC8INC40YUg0LLQsNC70LjQtNC90L7RgdGC0YxcbiAgX2hhc0ludmFsaWRJbnB1dCgpIHtcbiAgICByZXR1cm4gdGhpcy5faW5wdXRFbGVtZW50LnNvbWUoKGlucHV0KSA9PiB7XG4gICAgICByZXR1cm4gIWlucHV0LnZhbGlkaXR5LnZhbGlkXG4gICAgfSk7XG4gIH07XG5cbiAgZGlzYWJsZVN1Ym1pdEJ1dHRvbigpIHtcbiAgICB0aGlzLl9idXR0b24uY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKVxuICAgIHRoaXMuX2J1dHRvbi5kaXNhYmxlZCA9IHRydWVcbiAgfTtcblxuICBfZW5hYmxlU3VibWl0QnV0dG9uKCkge1xuICAgIHRoaXMuX2J1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpXG4gICAgdGhpcy5fYnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XG4gIH07XG5cbiAgLy/RhNGD0L3QutGG0LjRjyDQtNC70Y8g0LrQvdC+0L/QutC4INGB0L7RhdGA0LDQvdC10L3QuNGPXG4gIF90b2dnbGVCdXR0b25TdGF0ZSA9ICgpID0+IHtcbiAgICBpZih0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xuICAgICAgdGhpcy5kaXNhYmxlU3VibWl0QnV0dG9uKClcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fZW5hYmxlU3VibWl0QnV0dG9uKClcbiAgICB9O1xuICB9O1xuXG4gIC8v0LTQvtCx0LDQstC70Y/QtdC8INGB0LvRg9GI0LDRgtC10LvRj1xuICBfc2V0RXZlbnRMaXN0ZW5lcnMgPSAoKSA9PiB7XG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcblxuICAgIHRoaXMuX2lucHV0RWxlbWVudC5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dCk7XG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKClcbiAgfTtcbn07XG4iLCJleHBvcnQgY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpOyAvL9GB0LXQu9C10LrRgtC+0YAg0L/QvtC/0LDQv9CwLCDQvdCw0YXQvtC00LjRgiDQv9C+0L/QsNC/XG4gICAgdGhpcy5fcG9wdXBDbG9zZUJ1dHRvbiA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fYnV0dG9uLWNsb3NlJykgLy/QvdCw0YXQvtC00LjQvCDQutC90L7Qv9C60YMg0LfQsNC60YDRi9GC0LjRjyDQv9C+0L/QsNC/0LBcbiAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XG4gIH1cblxuICAvL9C+0YLQutGA0YvRgtC40LUg0L/QvtC/0LDQv9CwXG4gIG9wZW4oKSB7XG4gICAgdGhpcy5zZXRFdmVudExpc3RlbmVycygpXG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZCgncG9wdXBfb3BlbmVkJyk7IC8v0LTQvtCx0LDQstC70Y/QtdC8INC+0YLQutGA0YvRgtC40LUg0L/QvtC/0LDQv9CwXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgfTtcblxuICAvL9C30LDQutGA0YvRgtC40LUg0L/QvtC/0LDQv9CwXG4gIGNsb3NlKCkge1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoJ3BvcHVwX29wZW5lZCcpOyAvL9GD0LTQsNC70Y/QtdC8INC+0YLQutGA0YvRgtC40LUg0L/QvtC/0LDQv9CwXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgfTtcblxuICAvL9C70L7Qs9C40LrQsCDQt9Cw0LrRgNGL0YLQuNGPINC/0L7Qv9Cw0L/QsCDQutC70LDQstC40YjQtdC5IEVzY1xuICBfaGFuZGxlRXNjQ2xvc2UoZXZ0KSB7XG4gICAgLy/Qv9GA0L7QstC10YDRj9C10Lwg0L3QsNC20LDRgtC40LUgZXNjXG4gICAgaWYgKGV2dC5rZXkgPT09ICdFc2NhcGUnKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7IC8v0LfQsNC60YDRi9Cy0LDQtdC8INC/0L4g0L3QsNC20LDRgtC40Y4g0L3QsCBlc2NcbiAgICB9XG4gIH07XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgLy/QtNC+0LHQsNCy0LvRj9C10YIg0YHQu9GD0YjQsNGC0LXQu9GMINC60LvQuNC60LAg0LjQutC+0L3QutC1INC30LDQutGA0YvRgtC40Y8g0L/QvtC/0LDQv9CwXG4gICAgdGhpcy5fcG9wdXBDbG9zZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9KTtcbiAgICAvL9C30LDQutGA0YvRgtC40LUg0L/RgNC4INC60LvQuNC60LUg0L3QsCDQt9Cw0YLQtdC80L3RkdC90L3Rg9GOINC+0LHQu9Cw0YHRgtGMINCy0L7QutGA0YPQsyDRhNC+0YDQvNGLXG4gICAgdGhpcy5fcG9wdXAuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgKGV2dCkgPT4ge1xuICAgICAgaWYgKGV2dC50YXJnZXQgPT09IGV2dC5jdXJyZW50VGFyZ2V0KSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH07XG4gICAgfSk7XG4gIH07XG59O1xuIiwiaW1wb3J0IHsgUG9wdXAgfSBmcm9tIFwiLi9Qb3B1cFwiO1xuXG5leHBvcnQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgY2FsbGJhY2tTdWJtaXQpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTsgLy/QvdCw0YHQu9C10LTRg9C10Lwg0LrQu9Cw0YHRgSDQv9C+0L/QsNC/0LBcbiAgICB0aGlzLl9jYWxsYmFja1N1Ym1pdCA9IGNhbGxiYWNrU3VibWl0OyAvL9C60L7Qu9Cx0Y3QuiDRgdCw0LHQvNC40YLQsCDRhNC+0YDQvNGLXG5cbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKTsgLy/QvdCw0YXQvtC00LjQvCDRhNC+0YDQvNGDXG4gICAgdGhpcy5faW5wdXRFbGVtZW50cyA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbChcIi5wb3B1cF9faW5wdXRcIik7IC8v0L3QsNGF0L7QtNC40Lwg0L/QvtC70Y8g0LjQvNC/0YPRgtC+0LJcbiAgICB0aGlzLl9idXR0b24gPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoXCJwb3B1cF9fYnV0dG9uLXN1Ym1pdFwiKTsgLy/QvdCw0YXQvtC00LjQvCDQutC90L7QvNC60YMg0YHQvtGF0YDQsNC90LXQvdC40Y8g0L/QvtC/0LDQv9CwXG5cbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2ZW50KSA9PiB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgY29uc3QgcmVwbGFjZW1lbnRUZXh0ID0gZXZlbnQuc3VibWl0dGVyLnRleHRDb250ZW50O1xuICAgICAgLy8g0KHQvNC10L3QsCDRgtC10LrRgdGC0LAg0LrQvdC+0L/QutC4INC/0YDQuCDRgdC+0YXRgNCw0L3QtdC90LjQtSDQtNCw0L3QvdGL0YVcbiAgICAgIGV2ZW50LnN1Ym1pdHRlci50ZXh0Q29udGVudCA9IFwi0KHQvtGF0YDQsNC90LXQvdC40LUuLi5cIjtcbiAgICAgIHRoaXMuX2NhbGxiYWNrU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpXG4gICAgICAgIC50aGVuKCgpID0+IHRoaXMuY2xvc2UoKSlcbiAgICAgICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgICAgIGV2ZW50LnN1Ym1pdHRlci50ZXh0Q29udGVudCA9IHJlcGxhY2VtZW50VGV4dDtcbiAgICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICAvL19nZXRJbnB1dFZhbHVlcyDRgdC+0LHQuNGA0LDQtdGCINC00LDQvdC90YvQtSDQstGB0LXRhSDQv9C+0LvQtdC5INGE0L7RgNC80YtcbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIGNvbnN0IHZhbHVlcyA9IHt9OyAvL9GB0L7Qt9C00LDQtdC8INC/0YPRgdGC0L7QuSDQvtCx0YrQtdC60YJcbiAgICAvL9C00L7QsdCw0LLQu9GP0LXQvCDQt9C90LDRh9C10L3QuNC1INCy0YHQtdGFINC/0L7Qu9C10LlcbiAgICB0aGlzLl9pbnB1dEVsZW1lbnRzLmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICB2YWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gdmFsdWVzO1xuICB9XG5cbiAgc2V0SW5wdXRWYWx1ZShkYXRhKSB7XG4gICAgdGhpcy5faW5wdXRFbGVtZW50cy5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgaW5wdXQudmFsdWUgPSBkYXRhW2lucHV0Lm5hbWVdO1xuICAgIH0pO1xuICB9XG5cbiAgLy/Qv9C10YDQtdC30LDQv9C40YHRi9Cy0LDQtdC8INGA0L7QtNC40YLQtdC70YzRgdC60LjQuSDQvNC10YLQvtC0IGNsb3NlINC00LvRjyDRgdCx0YDQvtGB0LAg0YTQvtGA0LzRi1xuICBjbG9zZSgpIHtcbiAgICBzdXBlci5jbG9zZSgpO1xuICAgIHRoaXMuX2Zvcm0ucmVzZXQoKTtcbiAgfVxuXG4gIGNoZW5nZWRCdXR0b25UZXh0KHRleHQpIHtcbiAgICB0aGlzLl9idXR0b24udGV4dENvbnRlbnQgPSB0ZXh0O1xuICB9XG59XG4iLCJpbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xuXG4vL9C40LzQv9C+0YDRgiDQutC+0L3RgdGC0LDQvdGCXG5pbXBvcnQge1xuICB2YWxpZGF0aW9uQ29uZmlnLFxuICAvLyBnYWxsZXJ5Q29udGFpbmVyLFxuICAvLyBhYm91dElucHV0LFxuICAvLyBuYW1lSW5wdXQsXG4gIHByb2ZpbGVCdXR0b24sXG4gIHBvcHVwQ29uZmlnLFxuICBidXR0b25PcGVuZUZvcm1DYXJkLFxuICBwcm9maWxlRWRpdEF2YXRhckJ1dHRvbixcbiAgLy8gcG9wdXBGb3JtUHJvZmlsZSxcbiAgLy8gcG9wdXBGb3JtUGxhY2VQbHVzZSxcbiAgLy8gcG9wdXBGb3JtQXZhdGFyLFxuICBwcm9maWxlVGl0bGUsXG4gIHByb2ZpbGVJbmZvLFxuICBwcm9maWxlQXZhdGFyLFxuICBmb3JtRWRpdFByb2ZpbGUsXG4gIGZvcm1BZGRQcm9maWxlLFxuICBmb3JtVXBkYXRlQXZhdGFyLFxufSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XG5cbi8v0LjQvNC/0L7RgNGCINC60LvQsNGB0YHQvtCyXG5pbXBvcnQgeyBDYXJkIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xuaW1wb3J0IHsgRm9ybVZhbGlkYXRvciB9IGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcbmltcG9ydCB7IFNlY3Rpb24gfSBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XG5pbXBvcnQgeyBQb3B1cFdpdGhGb3JtIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xuaW1wb3J0IHsgUG9wdXBXaXRoSW1hZ2UgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xuaW1wb3J0IHsgUG9wdXBXaXRoQ29uZmlybWF0aW9uIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybWF0aW9uLmpzXCI7XG5pbXBvcnQgeyBVc2VySW5mbyB9IGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XG5pbXBvcnQgQXBpIGZyb20gXCIuLi91dGlscy9BcGkuanNcIjtcblxubGV0IHVzZXJJZDsgLy92YXJpYWJsZSBmb3IgdXNlclxuXG5jb25zdCBhcGkgPSBuZXcgQXBpKHtcbiAgYmFzZVVybDogXCJodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTYwXCIsXG4gIGhlYWRlcnM6IHtcbiAgICBhdXRob3JpemF0aW9uOiBcImVhOTk2ZWM0LTM1ODYtNDllYy05OWNmLTQ2YzU2ZTYzN2E4OVwiLFxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICB9LFxufSk7XG5cbi8vdGhlIGZ1bmN0aW9uIG9mIGNyZWF0aW5nIGNhcmQgZWxlbWVudHNcbmZ1bmN0aW9uIGNyZWF0ZUNhcmQoZGF0YSkge1xuICBjb25zdCBjYXJkID0gbmV3IENhcmQoXG4gICAgZGF0YSxcbiAgICBcIiN0ZW1wbGF0ZS1uZXctaW1nXCIsXG4gICAgb3BlblBvcHVwSW1hZ2UsXG4gICAgdXNlcklkLFxuICAgIGFzeW5jICgpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXBpLmFkZExpa2UoZGF0YS5faWQpO1xuICAgICAgICBjYXJkLmxpa2UoKTtcbiAgICAgICAgY2FyZC5saWtlc0NvdW50KHJlc3BvbnNlKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJldHVybiBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwOiAke2Vycm9yfWApO1xuICAgICAgfVxuICAgIH0sXG4gICAgYXN5bmMgKCkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhcGkucmVtb3ZlTGlrZShkYXRhLl9pZCk7XG4gICAgICAgIGNhcmQuZGlzbGlrZSgpO1xuICAgICAgICBjYXJkLmxpa2VzQ291bnQocmVzcG9uc2UpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKGDQntGI0LjQsdC60LA6ICR7ZXJyb3J9YCk7XG4gICAgICB9XG4gICAgfSxcbiAgICAoKSA9PiB7XG4gICAgICBwb3B1cENvbmZpcm1hdGlvbi5vcGVuKGNhcmQpO1xuICAgIH1cbiAgKTtcbiAgcmV0dXJuIGNhcmQuZ2V0VmlldygpO1xufVxuXG4vL29wZW4gYmlnIGltZ1xuZnVuY3Rpb24gb3BlblBvcHVwSW1hZ2UobmFtZSwgbGluaykge1xuICBwb3B1cEltYWdlLm9wZW4obmFtZSwgbGluayk7XG59XG5cbi8vIGZvcm0gZm9yIGNoYW5nZWQgcHJvZmlsZVxuYXN5bmMgZnVuY3Rpb24gaGFuZGxlU3VibWl0Rm9ybUVkaXRQcm9maWxlKGRhdGEpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB1c2VyUHJvZmlsZSA9IGF3YWl0IGFwaS5lZGl0UHJvZmlsZVVzZXJBcGkoZGF0YSk7XG4gICAgdXNlci5zZXRVc2VySW5mbyh1c2VyUHJvZmlsZSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsDogJHtlcnJvcn1gKTtcbiAgfVxufVxuXG4vLyBmb3JtIGZvciBhZGQgbmV3IGNhcmRcbmFzeW5jIGZ1bmN0aW9uIGhhbmRsZVN1Ym1pdEZvcm1BZGRDYXJkKGRhdGEpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBuZXdDYXJkID0gYXdhaXQgYXBpLmNyZWF0ZU5ld0NhcmRBcGkoZGF0YSk7XG4gICAgY2FyZExpc3QuYWRkSXRlbShjcmVhdGVDYXJkKG5ld0NhcmQpKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwOiAke2Vycm9yfWApO1xuICB9XG59O1xuXG4vLyBmb3JtIGZvciBjaGFuZ2luZyBhdmF0YXJcbmFzeW5jIGZ1bmN0aW9uIGhhbmRsZVN1Ym1pdEZvcm1VcGRhdGVBdmF0YXIoZGF0YSkge1xuICB0cnkge1xuICAgIGNvbnN0IHVzZXJQcm9maWxlID0gYXdhaXQgYXBpLnVwZGF0ZVByb2ZpbGVVc2VyQXZhdGFyKGRhdGEpO1xuICAgIHVzZXIuc2V0VXNlckluZm8odXNlclByb2ZpbGUpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUubG9nKGDQntGI0LjQsdC60LA6ICR7ZXJyb3J9YCk7XG4gIH1cbn07XG5cbi8vY3JlYXRlIGFuIGluc3RhbmNlIG90IHRoZSBjbGFzcyBwb3B1cHdpdGhmb3JtIGZvciBlYWNoIHBvcHVwXG5jb25zdCBwb3B1cEltYWdlID0gbmV3IFBvcHVwV2l0aEltYWdlKHBvcHVwQ29uZmlnLnBvcHVwSW1hZ2VTZWxlY3Rvcik7XG5jb25zdCBwb3B1cEFkZCA9IG5ldyBQb3B1cFdpdGhGb3JtKHBvcHVwQ29uZmlnLnBvcHVwQWRkQ2FyZFNlbGVjdG9yLCBoYW5kbGVTdWJtaXRGb3JtQWRkQ2FyZCk7XG5jb25zdCBwb3B1cEVkaXQgPSBuZXcgUG9wdXBXaXRoRm9ybShwb3B1cENvbmZpZy5wb3B1cEVkaXRTZWxlY3RvciwgaGFuZGxlU3VibWl0Rm9ybUVkaXRQcm9maWxlKTtcbmNvbnN0IHBvcHVwQXZhdGFyID0gbmV3IFBvcHVwV2l0aEZvcm0ocG9wdXBDb25maWcucG9wdXBVcGRhdGVBdmF0YXJTZWxlY3RvciwgaGFuZGxlU3VibWl0Rm9ybVVwZGF0ZUF2YXRhcik7XG5jb25zdCB1c2VyID0gbmV3IFVzZXJJbmZvKHtcbiAgbmFtZTogcHJvZmlsZVRpdGxlLFxuICBhYm91dDogcHJvZmlsZUluZm8sXG4gIGF2YXRhcjogcHJvZmlsZUF2YXRhcixcbn0pO1xuXG5wcm9maWxlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXG4gIFwiY2xpY2tcIixcbiAgKCkgPT4ge1xuICAgIHBvcHVwRWRpdC5vcGVuKCk7XG4gICAgcG9wdXBFZGl0LnNldElucHV0VmFsdWUodXNlci5nZXRVc2VySW5mbygpKTtcbiAgICBmb3JtRWRpdFZhbGlkYXRvci5kaXNhYmxlU3VibWl0QnV0dG9uKCk7XG4gIH0sXG4gIGZhbHNlXG4pO1xuXG5wcm9maWxlRWRpdEF2YXRhckJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFxuICBcImNsaWNrXCIsXG4gICgpID0+IHtcbiAgICBwb3B1cEF2YXRhci5vcGVuKCk7XG4gICAgZm9ybUF2YXRhclZhbGlkYXRvci5kaXNhYmxlU3VibWl0QnV0dG9uKCk7XG4gIH0sXG4gIGZhbHNlXG4pO1xuXG5idXR0b25PcGVuZUZvcm1DYXJkLmFkZEV2ZW50TGlzdGVuZXIoXG4gIFwiY2xpY2tcIixcbiAgKCkgPT4ge1xuICAgIHBvcHVwQWRkLm9wZW4oKTtcbiAgICBmb3JtQ2FyZFZhbGlkYXRvci5kaXNhYmxlU3VibWl0QnV0dG9uKCk7XG4gIH0sXG4gIGZhbHNlXG4pO1xuXG5jb25zdCBmb3JtRWRpdFZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25Db25maWcsIGZvcm1FZGl0UHJvZmlsZSk7IC8v0LTQu9GPINCy0YvQt9C+0LLQsCDQstCw0LvQuNC00LDRhtC40Lgg0L/RgNC+0YTQuNC70Y9cbmNvbnN0IGZvcm1DYXJkVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IodmFsaWRhdGlvbkNvbmZpZywgZm9ybUFkZFByb2ZpbGUpOyAvL9C00LvRjyDQstGL0LfQvtCy0LAg0LLQsNC70LjQtNCw0YbQuNC4INC60LDRgNGC0LjQvdC60LhcblxuY29uc3QgZm9ybUF2YXRhclZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKFxuICB2YWxpZGF0aW9uQ29uZmlnLFxuICBmb3JtVXBkYXRlQXZhdGFyXG4pO1xuXG5mb3JtRWRpdFZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7IC8vINCy0YvQt9GL0LLQsNC10Lwg0LLQsNC70LjQtNCw0YbQuNGOINC/0L7Qv9Cw0L/QsCDQv9GA0L7RhNC40LvRj1xuZm9ybUNhcmRWYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpOyAvL9Cy0YvQt9GL0LLQsNC10Lwg0LLQsNC70LjQtNCw0YbQuNGOINC/0L7Qv9Cw0L/QsCDQtNC+0LHQsNCy0LvQtdC90LjRjyDQutCw0YDRgtC40L3QutC4XG5mb3JtQXZhdGFyVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcblxuY29uc3QgcG9wdXBDb25maXJtYXRpb24gPSBuZXcgUG9wdXBXaXRoQ29uZmlybWF0aW9uKFxuICBwb3B1cENvbmZpZy5wb3B1cERlbGV0ZVNlbGVjdG9yLFxuICBhc3luYyAoY2FyZCkgPT4ge1xuICAgIGFwaVxuICAgICAgLnJlbW92ZUNhcmQoY2FyZC5faWQpXG4gICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgIGNhcmQucmVtb3ZlKCk7XG4gICAgICAgIHBvcHVwQ29uZmlybWF0aW9uLmNsb3NlKCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsDogJHtlcnJvcn1gKSk7XG4gIH1cbik7XG5cbi8vINCX0LDQs9GA0YPQt9C60LAg0LrQsNGA0YLQvtGH0LXQuiDRgSDRgdC10YDQstC10YDQsFxuY29uc3QgY2FyZExpc3QgPSBuZXcgU2VjdGlvbihcbiAge1xuICAgIHJlbmRlcmVyOiAoZGF0YSkgPT4ge1xuICAgICAgY29uc3QgY2FyZCA9IGNyZWF0ZUNhcmQoZGF0YSk7XG5cbiAgICAgIGNhcmRMaXN0LmFkZEl0ZW0oY2FyZCk7XG4gICAgfSxcbiAgfSxcbiAgXCIuZ2FsbGVyeVwiXG4pO1xuXG4vLyDQntGC0YDQuNGB0L7QstC60LAg0LrQsNGA0YLQvtGH0LXQuiDRgSDRgdC10YDQstC10YDQsCArINC+0YLRgNC40YHQvtCy0LrQsCDQtNCw0L3QvdGL0YUg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPXG5Qcm9taXNlLmFsbChbYXBpLmdldFJlYWxVc2VySW5mbygpLCBhcGkuZ2V0SW5pdGlhbENhcmRzKCldKVxuICAudGhlbigoW3VzZXJQcm9maWxlLCBjYXJkc10pID0+IHtcbiAgICB1c2VyLnNldFVzZXJJbmZvKHVzZXJQcm9maWxlKTtcbiAgICB1c2VySWQgPSB1c2VyUHJvZmlsZS5faWQ7XG4gICAgY2FyZExpc3QucmVuZGVySXRlbXMoY2FyZHMpO1xuICB9KVxuXG4gIC5jYXRjaCgoZXJyb3IpID0+IGNvbnNvbGUubG9nKGDQntGI0LjQsdC60LA6ICR7ZXJyb3J9YCkpO1xuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIHRoaXMuX2Jhc2VVcmwgPSBvcHRpb25zLmJhc2VVcmw7XG4gICAgdGhpcy5faGVhZGVycyA9IG9wdGlvbnMuaGVhZGVycztcbiAgfVxuXG4gIC8v0L/RgNC+0LLQtdGA0LrQsCDQvtGC0LLQtdGC0LAg0YEg0YHQtdGA0LLQtdGA0LBcbiAgX2hhbmRsZVJlc3BvbnNlKHJlcykge1xuICAgIGlmIChyZXMub2spIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUocmVzLmpzb24oKSk7XG4gICAgfVxuXG4gICAgLy8gINC+0YLQutC70L7QvdGP0LXQvCDQv9GA0L7QvNC40YFcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsDogJHtyZXMuc3RhdHVzfWApO1xuICB9XG5cbiAgLy/RgNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNC1INC/0YDQvtGE0LjQu9GPXG4gIGFzeW5jIGVkaXRQcm9maWxlVXNlckFwaShkYXRhKSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZTogZGF0YS5uYW1lLFxuICAgICAgICBhYm91dDogZGF0YS5hYm91dCxcbiAgICAgIH0pLFxuICAgIH0pO1xuICAgIHJldHVybiB0aGlzLl9oYW5kbGVSZXNwb25zZShyZXNwb25zZSk7XG4gIH1cblxuICAvLyDQt9Cw0LPRgNGD0LfQutCwINC40L3RhNC+0YDQvNCw0YbQuNC4INC+INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtSDRgSDRgdC10YDQstC10YDQsFxuICBhc3luYyBnZXRSZWFsVXNlckluZm8oKSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSk7XG4gICAgcmV0dXJuIHRoaXMuX2hhbmRsZVJlc3BvbnNlKHJlc3BvbnNlKTtcbiAgfVxuXG4gIC8v0LfQsNCz0YDRg9C30LrQsCDQutCw0YDRgtC+0YfQtdC6INGBINGB0LXRgNCy0LXRgNCwXG4gIGFzeW5jIGdldEluaXRpYWxDYXJkcygpIHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KTtcbiAgICByZXR1cm4gdGhpcy5faGFuZGxlUmVzcG9uc2UocmVzcG9uc2UpO1xuICB9XG5cbiAgLy/QtNC+0LHQsNCy0LvQtdC90LjQtSDQvdC+0LLQvtC5INC60LDRgNGC0L7Rh9C60Lgg0YEg0YHQtdGA0LLQtdGA0LBcbiAgYXN5bmMgY3JlYXRlTmV3Q2FyZEFwaShkYXRhKSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXG4gICAgfSk7XG4gICAgcmV0dXJuIHRoaXMuX2hhbmRsZVJlc3BvbnNlKHJlc3BvbnNlKTtcbiAgfVxuXG4gIC8v0YPQtNCw0LvQtdC90LjQtSDQutCw0YDRgtC+0YfQutC4XG4gIGFzeW5jIHJlbW92ZUNhcmQoY2FyZElkKSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH1gLCB7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pO1xuICAgIHJldHVybiB0aGlzLl9oYW5kbGVSZXNwb25zZShyZXNwb25zZSk7XG4gIH1cblxuICAvL9GB0YLQsNCy0LjQvCDQu9Cw0LnQulxuICBhc3luYyBhZGRMaWtlKGNhcmRJZCkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9L2xpa2VzYCwge1xuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KTtcbiAgICByZXR1cm4gdGhpcy5faGFuZGxlUmVzcG9uc2UocmVzcG9uc2UpO1xuICB9XG5cbiAgLy8g0L/QvtGB0YLQsNC90L7QstC60LAg0Lgg0YHQvdGP0YLQuNC1INC70LDQudC60LAg0YEg0LrQsNGA0YLQvtGH0LrQuFxuICBhc3luYyByZW1vdmVMaWtlKGNhcmRJZCkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9L2xpa2VzYCwge1xuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KTtcbiAgICByZXR1cm4gdGhpcy5faGFuZGxlUmVzcG9uc2UocmVzcG9uc2UpO1xuICB9XG5cbiAgLy/QvtCx0L3QvtCy0LvQtdC90LjQtSDQsNCy0LDRgtCw0YDQsFxuICBhc3luYyB1cGRhdGVQcm9maWxlVXNlckF2YXRhcihkYXRhKSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGF2YXRhcjogZGF0YS5hdmF0YXIsXG4gICAgICB9KSxcbiAgICB9KTtcbiAgICByZXR1cm4gdGhpcy5faGFuZGxlUmVzcG9uc2UocmVzcG9uc2UpO1xuICB9XG59O1xuIiwiaW1wb3J0IHsgUG9wdXAgfSBmcm9tICcuL1BvcHVwJztcblxuLy/QstGB0YLQsNCy0LvRj9C10Lwg0LIg0L/QvtC/0LDQvyDQutCw0YDRgtC40L3QutGDXG5leHBvcnQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTsgLy/RgdC10LvQtdC60YLQvtGAINC/0L7Qv9Cw0L/QsFxuICAgIHRoaXMuX3BvcHVwSW1hZ2UgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ltZycpIC8v0L3QsNGF0L7QtNC40Lwg0YTQvtGA0LzRg1xuICAgIHRoaXMuX3BvcHVwSW1hZ2VUaXRsZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fdGl0bGUtaW1nJylcbiAgfTtcblxuLy/Qv9C10YDQtdC30LDQv9C40YHRi9Cy0LDQtdC8INGA0L7QtNC40YLQtdC70YzRgdC60LjQuSDQvNC10YLQvtC0XG4gIG9wZW4obmFtZSwgbGluaykge1xuICAgIHRoaXMuX3BvcHVwSW1hZ2VUaXRsZS50ZXh0Q29udGVudCA9IG5hbWU7IC8v0LLRgdGC0LDQstC70Y/QtdC8INC90LDQt9Cy0LDQvdC40LUg0LrQsNGA0YLQuNC90LrQuFxuICAgIHRoaXMuX3BvcHVwSW1hZ2Uuc3JjID0gbGluazsgLy/QstGB0YLQsNCy0LvRj9C10Lwg0YHRgdGL0LvQutGDINC90LAg0LrQsNGA0YLQuNC90LrRg1xuICAgIHRoaXMuX3BvcHVwSW1hZ2UuYWx0ID0gbmFtZTsgLy8g0LLRgdGC0LDQstC70Y/QtdC8INGC0LXQutGB0YIsINC10YHQu9C4INC60LDRgNGC0LjQvdC60LAg0L3QtSDQt9Cw0LPRgNGD0LfQuNC70LDRgdGMXG4gICAgc3VwZXIub3BlbigpO1xuICB9O1xufTtcbiIsImV4cG9ydCBjbGFzcyBVc2VySW5mbyB7XG4gIGNvbnN0cnVjdG9yKHsgbmFtZSwgYWJvdXQsIGF2YXRhciB9KSB7XG4gICAgdGhpcy5fZGF0YSA9IHtcbiAgICAgIG5hbWU6IG5hbWUudGV4dENvbnRlbnQsIC8v0Y3Qu9C10LzQtdC90YIg0LjQvNC10L3QuCDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y9cbiAgICAgIGFib3V0OiBhYm91dC50ZXh0Q29udGVudCwgLy/RjdC70LXQvNC10L3RgiDQuNC90YTQvtGA0LzQsNGG0LjQuCDQviDRgdC10LHQtVxuICAgICAgYXZhdGFyOiBhdmF0YXIudGV4dENvbnRlbnQsIC8vYXZhdGFyIGVsZW1lbnRcbiAgICB9O1xuICAgIHRoaXMuX25hbWUgPSBuYW1lO1xuICAgIHRoaXMuX2Fib3V0ID0gYWJvdXQ7XG4gICAgdGhpcy5fYXZhdGFyID0gYXZhdGFyO1xuICB9XG5cbiAgLy/QstC+0LfQstGA0LDRidCw0LXRgiDQvtCx0YrQtdC60YIg0YEg0LTQsNC90L3Ri9C80Lgg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPLlxuICBnZXRVc2VySW5mbygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZTogdGhpcy5fZGF0YS5uYW1lLFxuICAgICAgYWJvdXQ6IHRoaXMuX2RhdGEuYWJvdXQsXG4gICAgICBhdmF0YXI6IHRoaXMuX2RhdGEuYXZhdGFyLFxuICAgIH07XG4gIH07XG5cbiAgLy/RgdC+0LHQuNGA0LDQtdC8INC40L3RhNC+0YDQvNCw0YbQuNGOINC+INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtVxuICBzZXRVc2VySW5mbyhkYXRhKSB7XG4gICAgdGhpcy5fZGF0YS5uYW1lID0gZGF0YS5uYW1lO1xuICAgIHRoaXMuX2RhdGEuYWJvdXQgPSBkYXRhLmFib3V0O1xuICAgIHRoaXMuX2RhdGEuYXZhdGFyID0gZGF0YS5hdmF0YXI7XG4gICAgaWYgKGRhdGEubmFtZSkge1xuICAgICAgdGhpcy5fbmFtZS50ZXh0Q29udGVudCA9IHRoaXMuX2RhdGEubmFtZTtcbiAgICB9XG5cbiAgICBpZiAoZGF0YS5hYm91dCkge1xuICAgICAgdGhpcy5fYWJvdXQudGV4dENvbnRlbnQgPSB0aGlzLl9kYXRhLmFib3V0O1xuICAgIH1cblxuICAgIC8v0LTQvtCx0LDQstC70Y/QtdC8INCw0LLQsNGC0LDRgFxuICAgIGlmIChkYXRhLmF2YXRhcikge1xuICAgICAgdGhpcy5fYXZhdGFyLnNyYyA9IHRoaXMuX2RhdGEuYXZhdGFyO1xuICAgICAgdGhpcy5fYXZhdGFyLmFsdCA9IHRoaXMuX2RhdGEubmFtZTtcbiAgICB9XG4gIH07XG59O1xuIiwiaW1wb3J0IHsgUG9wdXAgfSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwLmpzJ1xuXG4vL9C/0L7Qv9Cw0L8g0L/QvtC00YLQstC10YDQttC00LXQvdC40Y8g0YPQtNCw0LvQtdC90LjRjyDQutCw0YDRgtC+0YfQtdC6XG5leHBvcnQgY2xhc3MgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cCwgaGFuZGxlU3VibWl0KSB7XG4gICAgc3VwZXIocG9wdXApO1xuICAgIHRoaXMuX2hhbmRsZVN1Ym1pdCA9IGhhbmRsZVN1Ym1pdDtcbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKTtcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLl9oYW5kbGVTdWJtaXQodGhpcy5fY2FyZCk7XG4gICAgfSk7XG4gIH1cblxuICBvcGVuKGNhcmQpIHtcbiAgICB0aGlzLl9jYXJkID0gY2FyZDtcbiAgICBzdXBlci5vcGVuKCk7XG4gIH1cbn1cbiIsIi8vINC60LvQsNGB0YEgU2VjdGlvbiAsINC+0YLQstC10YfQsNC10YIg0LfQsCDQvtGC0YDQuNGB0L7QstC60YMg0Y3Qu9C10LzQtdC90YLQvtCyINC90LAg0YHRgtGA0LDQvdC40YbQtVxuZXhwb3J0IGNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcih7IHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcbiAgfVxuXG4gIGFkZEl0ZW0gPSAoaXRlbSkgPT4ge1xuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGl0ZW0pO1xuICB9O1xuXG4gIHJlbmRlckl0ZW1zKGl0ZW1zKSB7XG4gICAgaXRlbXMucmV2ZXJzZSgpLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgIHJldHVybiB0aGlzLl9yZW5kZXJlcihpdGVtKTtcbiAgICB9KTtcbiAgfVxufVxuXG4vLyDQoyDQutC70LDRgdGB0LAgU2VjdGlvbiDQvdC10YIg0YHQstC+0LXQuSDRgNCw0LfQvNC10YLQutC4LiDQntC9INC/0L7Qu9GD0YfQsNC10YIg0YDQsNC30LzQtdGC0LrRgyDRh9C10YDQtdC3INGE0YPQvdC60YbQuNGOLdC60L7Qu9Cx0Y3QuiDQuCDQstGB0YLQsNCy0LvRj9C10YIg0LXRkSDQsiDQutC+0L3RgtC10LnQvdC10YAuXG4iXSwibmFtZXMiOlsidmFsaWRhdGlvbkNvbmZpZyIsImZvcm1TZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwicHJvZmlsZUJ1dHRvbiIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInByb2ZpbGVUaXRsZSIsInByb2ZpbGVJbmZvIiwicHJvZmlsZUF2YXRhciIsInByb2ZpbGVFZGl0QXZhdGFyQnV0dG9uIiwiYnV0dG9uT3BlbmVGb3JtQ2FyZCIsImZvcm1FZGl0UHJvZmlsZSIsImZvcm1zIiwiZWRpdEZvcm0iLCJmb3JtQWRkUHJvZmlsZSIsImFkZEZvcm0iLCJmb3JtVXBkYXRlQXZhdGFyIiwiZWRpdEF2YXRhckZvcm0iLCJDYXJkIiwiY29uc3RydWN0b3IiLCJkYXRhIiwidGVtcGxhdGVTZWxlY3RvciIsImhhbmRsZUNhcmRDbGljayIsInVzZXJJZCIsImxpa2UiLCJkaXNsaWtlIiwiZGVsZXRlQ2FyZCIsInRoaXMiLCJfdGVtcGxhdGVTZWxlY3RvciIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfbGlrZXMiLCJsaWtlcyIsIl9pZCIsIl9uYW1lIiwibmFtZSIsIl9saW5rIiwibGluayIsIl9vd25lcklkIiwib3duZXIiLCJfdXNlcklkIiwiX2xpa2UiLCJfZGlzbGlrZSIsIl9kZWxldGVDYXJkIiwiX2xpa2VCdXR0b24iLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW1vdmUiLCJsaWtlc0NvdW50IiwicmVzIiwiX2xpa2VzQ291bnQiLCJ0ZXh0Q29udGVudCIsImxlbmd0aCIsIl91c2VyTGlrZWQiLCJmb3JFYWNoIiwiZWxlbWVudElkIiwiX2NhcmRFbGVtZW50IiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNvbnRhaW5zIiwiX2RlbGV0ZUJ1dHRvblRyYXNoIiwiX2ltYWdlRWxlbWVudE1hc2siLCJnZXRWaWV3IiwidGVtcGxhdGUiLCJlbGVtZW50IiwiY29udGVudCIsImNsb25lTm9kZSIsImNvbnNvbGUiLCJsb2ciLCJzcmMiLCJhbHQiLCJGb3JtVmFsaWRhdG9yIiwiZm9ybSIsIl9mb3JtIiwiX2Zvcm1TZWxlY3RvciIsIl9pbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJfaW5wdXRFbGVtZW50IiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsIl9idXR0b24iLCJfc2hvd0lucHV0RXJyb3IiLCJpbnB1dCIsInRleHRFcnJvciIsImVycm9yRWxlbWVudCIsImlkIiwiX2hpZGVJbnB1dEVycm9yIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsInZhbGlkaXR5IiwidmFsaWQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsIl9oYXNJbnZhbGlkSW5wdXQiLCJzb21lIiwiZGlzYWJsZVN1Ym1pdEJ1dHRvbiIsImRpc2FibGVkIiwiX2VuYWJsZVN1Ym1pdEJ1dHRvbiIsIl90b2dnbGVCdXR0b25TdGF0ZSIsImVuYWJsZVZhbGlkYXRpb24iLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJfcG9wdXAiLCJfcG9wdXBDbG9zZUJ1dHRvbiIsIl9oYW5kbGVFc2NDbG9zZSIsImJpbmQiLCJvcGVuIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJjbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJldnQiLCJrZXkiLCJ0YXJnZXQiLCJjdXJyZW50VGFyZ2V0IiwiUG9wdXBXaXRoRm9ybSIsImNhbGxiYWNrU3VibWl0Iiwic3VwZXIiLCJfY2FsbGJhY2tTdWJtaXQiLCJfaW5wdXRFbGVtZW50cyIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJyZXBsYWNlbWVudFRleHQiLCJzdWJtaXR0ZXIiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJ0aGVuIiwiZmluYWxseSIsInZhbHVlcyIsInZhbHVlIiwic2V0SW5wdXRWYWx1ZSIsInJlc2V0IiwiY2hlbmdlZEJ1dHRvblRleHQiLCJ0ZXh0IiwiYXBpIiwib3B0aW9ucyIsIl9iYXNlVXJsIiwiYmFzZVVybCIsIl9oZWFkZXJzIiwiaGVhZGVycyIsIl9oYW5kbGVSZXNwb25zZSIsIm9rIiwiUHJvbWlzZSIsInJlc29sdmUiLCJqc29uIiwicmVqZWN0Iiwic3RhdHVzIiwiYXN5bmMiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJhYm91dCIsImNhcmRJZCIsImF2YXRhciIsImF1dGhvcml6YXRpb24iLCJjcmVhdGVDYXJkIiwiY2FyZCIsIm9wZW5Qb3B1cEltYWdlIiwiYWRkTGlrZSIsImVycm9yIiwicmVtb3ZlTGlrZSIsInBvcHVwQ29uZmlybWF0aW9uIiwicG9wdXBJbWFnZSIsIl9wb3B1cEltYWdlIiwiX3BvcHVwSW1hZ2VUaXRsZSIsInBvcHVwQWRkIiwibmV3Q2FyZCIsImNyZWF0ZU5ld0NhcmRBcGkiLCJjYXJkTGlzdCIsImFkZEl0ZW0iLCJwb3B1cEVkaXQiLCJ1c2VyUHJvZmlsZSIsImVkaXRQcm9maWxlVXNlckFwaSIsInVzZXIiLCJzZXRVc2VySW5mbyIsInBvcHVwQXZhdGFyIiwidXBkYXRlUHJvZmlsZVVzZXJBdmF0YXIiLCJfZGF0YSIsIl9hYm91dCIsIl9hdmF0YXIiLCJnZXRVc2VySW5mbyIsImZvcm1FZGl0VmFsaWRhdG9yIiwiZm9ybUF2YXRhclZhbGlkYXRvciIsImZvcm1DYXJkVmFsaWRhdG9yIiwicG9wdXAiLCJoYW5kbGVTdWJtaXQiLCJfaGFuZGxlU3VibWl0IiwiX2NhcmQiLCJyZW1vdmVDYXJkIiwiY2F0Y2giLCJyZW5kZXJlciIsImNvbnRhaW5lclNlbGVjdG9yIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsIml0ZW0iLCJwcmVwZW5kIiwicmVuZGVySXRlbXMiLCJpdGVtcyIsInJldmVyc2UiLCJhbGwiLCJnZXRSZWFsVXNlckluZm8iLCJnZXRJbml0aWFsQ2FyZHMiLCJjYXJkcyJdLCJzb3VyY2VSb290IjoiIn0=