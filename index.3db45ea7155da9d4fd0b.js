(()=>{"use strict";const e={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button-submit",inactiveButtonClass:"popup__button-submit_invalid",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_visible"},t=(document.querySelector(".gallery"),document.querySelector(".profile__button")),s=document.querySelector(".profile__title"),i=document.querySelector(".profile__info"),o=document.querySelector(".profile__img"),r=document.querySelector(".profile__edit-avatar-button"),n=document.querySelector(".profile__button-plus"),a=(document.querySelector(".popup_type_profile"),document.querySelector(".popup_type_img"),document.querySelector(".popup_type_card-add"),document.querySelector(".popup__img"),document.querySelector(".popup__title-img"),document.forms.editForm),l=document.forms.addForm,_=document.forms.editAvatarForm;document.querySelector(".popup__form_profile"),document.querySelector(".popup__form_card-add"),document.querySelector(".popup__form_avatar"),document.querySelector(".popup__input_form-name"),document.querySelector(".popup__input_form-about"),document.querySelector(".popup__input_img-name"),document.querySelector(".popup__input_img-link"),document.querySelector(".popup__button-close_profile"),document.querySelector(".popup__button-close_add-card"),document.querySelector(".popup__button-close_big-img");class u{constructor(e,t,s,i,o,r,n){this._templateSelector=t,this._handleCardClick=s,this._likes=e.likes,this._id=e._id,this._name=e.name,this._link=e.link,this._ownerId=e.owner._id,this._userId=i,this._like=o,this._dislike=r,this._deleteCard=n}like(){this._likeButton.classList.add("gallery__like_active")}dislike(){this._likeButton.classList.remove("gallery__like_active")}setLikesCount(e){this._setLikesCount.textContent=`${e.likes.length}`}_checkLIikes(){this._likes.forEach((e=>{e._id===this._userId?this.like():this.dislike()}))}remove(){this._cardElement.remove()}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._likeButton.classList.contains("gallery__like_active")?this._dislike():this._like()})),this._deleteButtonTrash.addEventListener("click",(()=>{this._deleteCard(this._id)})),this._imageElementMask.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}getView=()=>{const e=document.querySelector(this._templateSelector);if(e){const t=e.content.querySelector(".gallery__item");t?this._cardElement=t.cloneNode(!0):console.log("В классе Card не найден .gallery__item!")}else console.log("В классе Card не найден "+this._templateSelector+"!");return this._likeButton=this._cardElement.querySelector(".gallery__like"),this._setLikesCount=this._cardElement.querySelector(".gallery__count-like"),this._setLikesCount.textContent=this._likes.length,this._deleteButtonTrash=this._cardElement.querySelector(".gallery__del"),this._ownerId!==this._userId&&this._deleteButtonTrash.remove(),this._imageElementMask=this._cardElement.querySelector(".gallery__img"),this._imageElementMask.src=this._link,this._imageElementMask.alt=this._name,this._cardElement.querySelector(".gallery__title").textContent=this._name,this._setEventListeners(),this._checkLIikes(),this._cardElement}}class c{constructor(e,t){this._form=t,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputElement=Array.from(this._form.querySelectorAll(this._inputSelector)),this._button=this._form.querySelector(this._submitButtonSelector)}_showInputError=(e,t)=>{const s=this._form.querySelector(`.${e.id}-error`);e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)};_hideInputError=e=>{const t=this._form.querySelector(`.${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)};_checkInputValidity=e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)};_hasInvalidInput(){return this._inputElement.some((e=>!e.validity.valid))}disableSubmitButton(){this._button.classList.add(this._inactiveButtonClass),this._button.disabled=!0}_enableSubmitButton(){this._button.classList.remove(this._inactiveButtonClass),this._button.disabled=!1}_toggleButtonState=()=>{this._hasInvalidInput()?this.disableSubmitButton():this._enableSubmitButton()};_setEventListeners=()=>{this._toggleButtonState(),this._inputElement.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))};enableValidation(){this._setEventListeners()}}class h{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&!(e.ctrlKey||e.altKey||e.shiftKey)&&this._popup.classList.contains("popup_opened")&&this.close()}setEventListeners(){this._popup.addEventListener("mousedown",(e=>{e.target.classList.contains("popup__button-close")&&this.close(),e.target.classList.contains("popup_opened")&&this.close()}))}}class p extends h{constructor(e,t){super(e),this._callbackSubmit=t,this._form=this._popup.querySelector(".popup__form"),this._inputElements=this._form.querySelectorAll(".popup__input"),this._button=this._form.querySelector(".popup__button-submit")}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault();const t=e.submitter.textContent;e.submitter.textContent="Сохранение...",this._callbackSubmit(this._getInputValues()).then((()=>this.close())).finally((()=>{e.submitter.textContent=t}))}))}_getInputValues(){const e={};return this._inputElements.forEach((t=>{e[t.name]=t.value})),e}setInputValue(e){this._inputElements.forEach((t=>{t.value=e[t.name]}))}close(){super.close(),this._form.reset()}}let d;const m=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_handleResponse(e){return e.ok?Promise.resolve(e.json()):Promise.reject(`Ошибка: ${e.status}`)}async editProfileUserApi(e){const t=await fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})});return this._handleResponse(t)}async getRealUserInfo(){const e=await fetch(`${this._baseUrl}/users/me`,{headers:this._headers});return this._handleResponse(e)}async getInitialCards(){const e=await fetch(`${this._baseUrl}/cards`,{headers:this._headers});return this._handleResponse(e)}async createNewCardApi(e){const t=await fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify(e)});return this._handleResponse(t)}async removeCard(e){const t=await fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers});return this._handleResponse(t)}async addLike(e){const t=await fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers});return this._handleResponse(t)}async removeLike(e){const t=await fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers});return this._handleResponse(t)}async updateProfileUserAvatar(e){const t=await fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})});return this._handleResponse(t)}}({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-60",headers:{authorization:"ea996ec4-3586-49ec-99cf-46c56e637a89","Content-Type":"application/json"}});function y(e){const t=new u(e,"#template-new-img",b,d,(async()=>{try{const s=await m.addLike(e._id);t.like(),t.setLikesCount(s)}catch(e){return console.log(`Ошибка: ${e}`)}}),(async()=>{try{const s=await m.removeLike(e._id);t.dislike(),t.setLikesCount(s)}catch(e){return console.log(`Ошибка: ${e}`)}}),(()=>{q.open(t)}));return t.getView()}function b(e,t){v.open(e,t)}const v=new class extends h{constructor(e){super(e),this._popupImage=this._popup.querySelector(".popup__img"),this._popupImageTitle=this._popup.querySelector(".popup__title-img")}open(e,t){this._popupImageTitle.textContent=e,this._popupImage.src=t,this._popupImage.alt=e,super.open()}}(".popup_type_img"),f=new p(".popup_type_card-add",(async function(e){try{const t=await m.createNewCardApi(e);I.addItem(y(t))}catch(e){console.log(`Ошибка: ${e}`)}})),S=new p(".popup_type_profile",(async function(e){try{const t=await m.editProfileUserApi(e);g.setUserInfo(t)}catch(e){console.log(`Ошибка: ${e}`)}})),E=new p(".popup_type_update-avatar",(async function(e){try{const t=await m.updateProfileUserAvatar(e);g.setUserInfo(t)}catch(e){console.log(`Ошибка: ${e}`)}})),g=new class{constructor({name:e,about:t,avatar:s}){this._data={name:e.textContent,about:t.textContent,avatar:s.textContent},this._name=e,this._about=t,this._avatar=s}getUserInfo(){return{name:this._data.name,about:this._data.about,avatar:this._data.avatar}}setUserInfo(e){this._data.name=e.name,this._data.about=e.about,this._data.avatar=e.avatar,e.name&&(this._name.textContent=this._data.name),e.about&&(this._about.textContent=this._data.about),e.avatar&&(this._avatar.src=this._data.avatar,this._avatar.alt=this._data.name)}}({name:s,about:i,avatar:o});t.addEventListener("click",(()=>{S.open(),S.setInputValue(g.getUserInfo()),k.disableSubmitButton()}),!1),r.addEventListener("click",(()=>{E.open(),L.disableSubmitButton()}),!1),n.addEventListener("click",(()=>{f.open(),C.disableSubmitButton()}),!1);const k=new c(e,a),C=new c(e,l),L=new c(e,_);k.enableValidation(),C.enableValidation(),L.enableValidation();const q=new class extends h{constructor(e,t){super(e),this._handleSubmit=t,this._form=this._popup.querySelector(".popup__form")}open(e){this._card=e,super.open()}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(this._card)}))}}(".popup_type_delete-card",(async e=>{m.removeCard(e._id).then((()=>{e.remove(),q.close()})).catch((e=>console.log(`Ошибка: ${e}`)))}));q.setEventListeners(),f.setEventListeners(),S.setEventListeners(),E.setEventListeners(),v.setEventListeners();const I=new class{constructor({renderer:e},t){this._renderer=e,this._container=document.querySelector(t)}addItem=e=>{this._container.prepend(e)};renderItems(e){e.reverse().forEach((e=>this._renderer(e)))}}({renderer:e=>{const t=y(e);I.addItem(t)}},".gallery");Promise.all([m.getRealUserInfo(),m.getInitialCards()]).then((([e,t])=>{g.setUserInfo(e),d=e._id,I.renderItems(t)})).catch((e=>console.log(`Ошибка: ${e}`)))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,